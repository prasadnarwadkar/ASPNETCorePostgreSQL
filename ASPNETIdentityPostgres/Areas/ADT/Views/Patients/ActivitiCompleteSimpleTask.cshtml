@model ASPNETIdentityPostgres.Areas.ADT.Models.AlfrescoTaskCompletionVars

@{
    

    ViewData["Title"] = "Complete User Message Task";

    var username = User.Identity.Name;

    var employeeBeingEvaluated = Model.variables.FirstOrDefault(v => v.name == "employee").value;

    var bpmRole = "";

    var mapping = ASPNETIdentityPostgres.Areas.ADT.Models.WebAppAndBPMUserMap.mappings.FirstOrDefault(m => m.UserNameOnWebApp.ToLower() == username.ToLower());

    if (mapping != null)
    {
        bpmRole = mapping.UserRoleOnActivitiEngineOrApp;
    }

    var employeeUsernames = ASPNETIdentityPostgres.Areas.ADT.Models.WebAppAndBPMUserMap.mappings.Where(m => m.UserIdOnActivitiEngineOrApp.ToLower() == username.ToLower());
    var hrUsername = ASPNETIdentityPostgres.Areas.ADT.Models.WebAppAndBPMUserMap.mappings.FirstOrDefault(m => m.UserRoleOnActivitiEngineOrApp.ToLower() == "hr_admin")?.UserNameOnWebApp;
    var pmUsername = ASPNETIdentityPostgres.Areas.ADT.Models.WebAppAndBPMUserMap.mappings.FirstOrDefault(m => m.UserRoleOnActivitiEngineOrApp.ToLower() == "pm")?.UserNameOnWebApp;
}

<h3>Complete Task: @Model.taskname (Alfresco Activiti)</h3>

<div>
    <div class="row">
        <div class="col-md-6">
            @if (bpmRole == "pm")
            {
                <p>You are a Project Manager.</p>
            }

            @if (bpmRole == "hr_admin")
            {
                <p>You are an HR/administrator.</p>
            }

            @if (bpmRole == "employee")
            {
                <p>You are an employee.</p>
            }
            <form asp-action="ActivitiCompleteSimpleTask">
                @Html.HiddenFor(model => model.taskid)
                @Html.HiddenFor(model => model.taskname)
                @Html.HiddenFor(model => model.action)
                @Html.HiddenFor(model => model.processInstanceId)

                <div asp-validation-summary="All" class="text-danger"></div>
                <h5>Process Instance Variables/Parameters so far:</h5>

                @if (Model != null && Model.variables?.Count() == 0)
                {
                    <p class="alert-danger">No process variables set/available.</p>
                }
                @if (Model != null && Model.variables?.Count() > 0)
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    Name
                                </th>

                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.variables)
                            {
                                <tr>
                                    <td>
                                        @item.name
                                    </td>

                                    <td>
                                        @item.value
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="alert-danger">No process variables set/available.</p>
                }

                @if (Model != null && Model.variables?.Count() > 0)
                {
                    @if (Model.taskname == "Self Evaluation")
                    {
                        if (bpmRole == "employee" && username.ToLower() == employeeBeingEvaluated.ToLower())
                        {
                            int i = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "self"));
                            @Html.HiddenFor(model => model.variables[i].name)

                            int employeeVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "employee"));
                            @Html.HiddenFor(model => model.variables[employeeVar].name)
                            @Html.HiddenFor(model => model.variables[employeeVar].value)

                            int hrVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "hr"));

                            if (hrVar != -1)
                            {
                                @Html.HiddenFor(model => model.variables[hrVar].name)
                                @Html.HiddenFor(model => model.variables[hrVar].value)
                            }

                            int pmVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "pm"));

                            if (pmVar != -1)
                            {
                                @Html.HiddenFor(model => model.variables[pmVar].name)
                                @Html.HiddenFor(model => model.variables[pmVar].value)
                            }

                            <div class="form-group">
                                <label asp-for="variables[i].value" class="control-label">Self Evaluation</label>
                                <input asp-for="variables[i].value" class="form-control" />
                                <span asp-validation-for="variables[i].value" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Submit" class="btn btn-primary" />
                            </div>
                        }
                        else
                        {
                            <p class="alert-danger">Please login as @employeeBeingEvaluated to evaluate yourself as an employee.</p>
                        }
                    }

                    @if (Model.taskname == "PM Evaluation")
                    {
                        if (bpmRole == "pm")
                        {
                            int employeeVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "employee"));
                            @Html.HiddenFor(model => model.variables[employeeVar].name)
                            @Html.HiddenFor(model => model.variables[employeeVar].value)

                            int selfVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "self"));
                            @Html.HiddenFor(model => model.variables[selfVar].name)
                            @Html.HiddenFor(model => model.variables[selfVar].value)

                            int hrVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "hr"));
                            @Html.HiddenFor(model => model.variables[hrVar].name)
                            @Html.HiddenFor(model => model.variables[hrVar].value)

                            int pmVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "pm"));
                            @Html.HiddenFor(model => model.variables[pmVar].name)

                            <div class="form-group">
                                <label asp-for="variables[pmVar].value" class="control-label">PM Evaluation</label>
                                <input asp-for="variables[pmVar].value" class="form-control" />
                                <span asp-validation-for="variables[pmVar].value" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Submit" class="btn btn-primary" />
                            </div>
                        }
                        else
                        {
                            <p class="alert-danger">Please login as @pmUsername to evaluate an employee as a PM.</p>
                        }
                    }

                    @if (Model.taskname == "HR Evaluation")
                    {
                        if (bpmRole == "hr_admin")
                        {
                            int i = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "hr"));

                            if (i != -1)
                            {
                                @Html.HiddenFor(model => model.variables[i].name)
                                <div class="form-group">
                                    <label asp-for="variables[i].value" class="control-label">HR Evaluation</label>
                                    <input asp-for="variables[i].value" class="form-control" />
                                    <span asp-validation-for="variables[i].value" class="text-danger"></span>
                                </div>
                            }

                            int employeeVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "employee"));
                            @Html.HiddenFor(model => model.variables[employeeVar].name)
                            @Html.HiddenFor(model => model.variables[employeeVar].value)

                            int selfVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "self"));
                            @Html.HiddenFor(model => model.variables[selfVar].name)
                            @Html.HiddenFor(model => model.variables[selfVar].value)

                            int pmVar = Model.variables.IndexOf(Model.variables.FirstOrDefault(v => v.name == "pm"));
                            @Html.HiddenFor(model => model.variables[pmVar].name)
                            @Html.HiddenFor(model => model.variables[pmVar].value)

                            <div class="form-group">
                                <input type="submit" value="Submit" class="btn btn-primary" />
                            </div>
                        }
                        else
                        {
                            <p class="alert-danger">Please login as @hrUsername to evaluate an employee as an HR.</p>
                        }
                    }
                }


                <div class="form-group">
                    <a asp-action="MySimpleProcesses" class="btn btn-danger" title="I do not have Alfresco Activiti running on my machine.">Cancel</a>
                </div>
            </form>
        </div>
        <div class="col-md-6">
            <img src="@Url.Action("DownloadDiagram", "Patients", new { id = Model.processInstanceId })" class="hide"/>
        </div>
    </div>
</div>

